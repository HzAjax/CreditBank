version: '3.8'

services:
  calculator:
    build:
      context: ./calculator
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - backend

  deal:
    build:
      context: ./deal
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/creditbank
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SERVER_PORT: 8080
      CALCULATOR_URL: http://calculator:8080/calculator
    networks:
      - backend

  statement:
    build:
      context: ./statement
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      SERVER_PORT: 8080
      DEAL_URL: http://deal:8080/deal
    networks:
      - backend

  dossier:
    build:
      context: ./dossier
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SERVER_PORT: 8080
    env_file:
      - mail.env
    depends_on:
      - kafka
      - zookeeper
    networks:
      - backend

  postgres:
    image: postgres:16
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: creditbank
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - backend

volumes:
  postgres-data:

networks:
  backend: